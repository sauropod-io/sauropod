FROM nvcr.io/nvidia/cuda:12.9.1-runtime-ubuntu24.04@sha256:1287141d283b8f06f45681b56a48a85791398c615888b1f96bfb9fc981392d98 AS rust-builder

RUN export DEBIAN_FRONTEND=noninteractive && \
    apt-get update && apt-get install -y \
    clang-19 \
    cmake \
    cuda-nvcc-12-9 \
    curl \
    g++ \
    git \
    gnupg \
    libcublas-dev-12-9 \
    libssl-dev \
    make \
    pkg-config \
    && apt-get clean && rm -rf /var/lib/apt/lists/* && \
    ln -s /usr/bin/clang-19 /usr/bin/clang && \
    ln -s /usr/bin/clang++-19 /usr/bin/clang++

# Install Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --profile minimal --default-toolchain stable -y
ENV PATH="/root/.cargo/bin:${PATH}"

# Install sccache
RUN curl -sSfL https://github.com/mozilla/sccache/releases/download/v0.10.0/sccache-v0.10.0-$(uname --machine)-unknown-linux-musl.tar.gz | tar -xz --strip-components=1 -C /usr/local/bin

WORKDIR /sauropod

# GENERATED BY tools/generate-dockerfiles
COPY Cargo.lock Cargo.lock
COPY Cargo.toml Cargo.toml
COPY bindings/llama-cpp-sys/Cargo.toml bindings/llama-cpp-sys/Cargo.toml
COPY bindings/llama-cpp/Cargo.toml bindings/llama-cpp/Cargo.toml
COPY bindings/onnxruntime-sys/Cargo.toml bindings/onnxruntime-sys/Cargo.toml
COPY bindings/onnxruntime/Cargo.toml bindings/onnxruntime/Cargo.toml
COPY crates/audio/Cargo.toml crates/audio/Cargo.toml
COPY crates/config/Cargo.toml crates/config/Cargo.toml
COPY crates/conversation/Cargo.toml crates/conversation/Cargo.toml
COPY crates/database/Cargo.toml crates/database/Cargo.toml
COPY crates/device-discovery/Cargo.toml crates/device-discovery/Cargo.toml
COPY crates/gguf/Cargo.toml crates/gguf/Cargo.toml
COPY crates/global-state/Cargo.toml crates/global-state/Cargo.toml
COPY crates/huggingface/Cargo.toml crates/huggingface/Cargo.toml
COPY crates/inference-engine-api/Cargo.toml crates/inference-engine-api/Cargo.toml
COPY crates/inference-engine/Cargo.toml crates/inference-engine/Cargo.toml
COPY crates/inference-http/Cargo.toml crates/inference-http/Cargo.toml
COPY crates/inference-realtime/Cargo.toml crates/inference-realtime/Cargo.toml
COPY crates/inference-responses/Cargo.toml crates/inference-responses/Cargo.toml
COPY crates/inference-server/Cargo.toml crates/inference-server/Cargo.toml
COPY crates/inference-thread/Cargo.toml crates/inference-thread/Cargo.toml
COPY crates/model-loading/Cargo.toml crates/model-loading/Cargo.toml
COPY crates/openai-api/Cargo.toml crates/openai-api/Cargo.toml
COPY crates/output-parser/Cargo.toml crates/output-parser/Cargo.toml
COPY crates/profiling/Cargo.toml crates/profiling/Cargo.toml
COPY crates/prompt-templates/Cargo.toml crates/prompt-templates/Cargo.toml
COPY crates/stt/Cargo.toml crates/stt/Cargo.toml
COPY crates/tts/Cargo.toml crates/tts/Cargo.toml
COPY crates/users/Cargo.toml crates/users/Cargo.toml
COPY crates/vad/Cargo.toml crates/vad/Cargo.toml
COPY tools/create-release-tag/Cargo.toml tools/create-release-tag/Cargo.toml
COPY tools/generate-dockerfiles/Cargo.toml tools/generate-dockerfiles/Cargo.toml
COPY tools/hf-test-helpers/Cargo.toml tools/hf-test-helpers/Cargo.toml
COPY tools/sqlx-wrapper/Cargo.toml tools/sqlx-wrapper/Cargo.toml
COPY tools/tracing-test-helpers/Cargo.toml tools/tracing-test-helpers/Cargo.toml
COPY tools/update-latest-image/Cargo.toml tools/update-latest-image/Cargo.toml
RUN mkdir bindings/llama-cpp-sys/src && touch bindings/llama-cpp-sys/src/lib.rs && \
    mkdir bindings/llama-cpp/src && touch bindings/llama-cpp/src/lib.rs && \
    mkdir bindings/onnxruntime-sys/src && touch bindings/onnxruntime-sys/src/lib.rs && \
    mkdir bindings/onnxruntime/src && touch bindings/onnxruntime/src/lib.rs && \
    mkdir crates/audio/src && touch crates/audio/src/lib.rs && \
    mkdir crates/config/src && touch crates/config/src/lib.rs && \
    mkdir crates/conversation/src && touch crates/conversation/src/lib.rs && \
    mkdir crates/database/src && touch crates/database/src/lib.rs && \
    mkdir crates/device-discovery/src && touch crates/device-discovery/src/lib.rs && \
    mkdir crates/gguf/src && touch crates/gguf/src/lib.rs && \
    mkdir crates/global-state/src && touch crates/global-state/src/lib.rs && \
    mkdir crates/huggingface/src && touch crates/huggingface/src/lib.rs && \
    mkdir crates/inference-engine-api/src && touch crates/inference-engine-api/src/lib.rs && \
    mkdir crates/inference-engine/src && touch crates/inference-engine/src/lib.rs && \
    mkdir crates/inference-http/src && touch crates/inference-http/src/lib.rs && \
    mkdir crates/inference-realtime/src && touch crates/inference-realtime/src/lib.rs && \
    mkdir crates/inference-responses/src && touch crates/inference-responses/src/lib.rs && \
    mkdir crates/inference-server/src && touch crates/inference-server/src/lib.rs && \
    mkdir crates/inference-thread/src && touch crates/inference-thread/src/lib.rs && \
    mkdir crates/model-loading/src && touch crates/model-loading/src/lib.rs && \
    mkdir crates/openai-api/src && touch crates/openai-api/src/lib.rs && \
    mkdir crates/output-parser/src && touch crates/output-parser/src/lib.rs && \
    mkdir crates/profiling/src && touch crates/profiling/src/lib.rs && \
    mkdir crates/prompt-templates/src && touch crates/prompt-templates/src/lib.rs && \
    mkdir crates/stt/src && touch crates/stt/src/lib.rs && \
    mkdir crates/tts/src && touch crates/tts/src/lib.rs && \
    mkdir crates/users/src && touch crates/users/src/lib.rs && \
    mkdir crates/vad/src && touch crates/vad/src/lib.rs && \
    mkdir tools/create-release-tag/src && touch tools/create-release-tag/src/lib.rs && \
    mkdir tools/generate-dockerfiles/src && touch tools/generate-dockerfiles/src/lib.rs && \
    mkdir tools/hf-test-helpers/src && touch tools/hf-test-helpers/src/lib.rs && \
    mkdir tools/sqlx-wrapper/src && touch tools/sqlx-wrapper/src/lib.rs && \
    mkdir tools/tracing-test-helpers/src && touch tools/tracing-test-helpers/src/lib.rs && \
    mkdir tools/update-latest-image/src && touch tools/update-latest-image/src/lib.rs

# Grab the Rust dependencies
RUN cargo fetch --locked

COPY . ./

# Build the release binary
ARG RUSTFLAGS
RUN --mount=type=secret,id=actions_results_url,env=ACTIONS_RESULTS_URL \
    --mount=type=secret,id=actions_runtime_token,env=ACTIONS_RUNTIME_TOKEN \
    if [ -n "$ACTIONS_RESULTS_URL" ]; then export ACTIONS_CACHE_SERVICE_V2=on SCCACHE_GHA_ENABLED=true RUSTC_WRAPPER=/usr/local/bin/sccache; fi; \
    make release-cuda

FROM nvcr.io/nvidia/cuda:12.9.1-runtime-ubuntu24.04@sha256:1287141d283b8f06f45681b56a48a85791398c615888b1f96bfb9fc981392d98 AS base

RUN export DEBIAN_FRONTEND=noninteractive && \
    apt-get update && apt-get install -y \
    espeak-ng \
    libssl3 \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

COPY --from=rust-builder /sauropod/target/optimized-release/sauropod-inference-server /usr/bin/
COPY --from=rust-builder /sauropod/target/optimized-release/libonnxruntime* /usr/lib/

ENV SAUROPOD_HOST=0.0.0.0
CMD ["/usr/bin/sauropod-inference-server"]
